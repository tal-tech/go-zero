// Code generated by MockGen. DO NOT EDIT.
// Source: k8sendpointcontroller.go

// Package discovk8s is a generated GoMock package.
package discovk8s

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEndpointController is a mock of EndpointController interface.
type MockEndpointController struct {
	ctrl     *gomock.Controller
	recorder *MockEndpointControllerMockRecorder
}

// MockEndpointControllerMockRecorder is the mock recorder for MockEndpointController.
type MockEndpointControllerMockRecorder struct {
	mock *MockEndpointController
}

// NewMockEndpointController creates a new mock instance.
func NewMockEndpointController(ctrl *gomock.Controller) *MockEndpointController {
	mock := &MockEndpointController{ctrl: ctrl}
	mock.recorder = &MockEndpointControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEndpointController) EXPECT() *MockEndpointControllerMockRecorder {
	return m.recorder
}

// AddOnUpdateFunc mocks base method.
func (m *MockEndpointController) AddOnUpdateFunc(serviceName string, updateFunc OnUpdateFunc) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddOnUpdateFunc", serviceName, updateFunc)
}

// AddOnUpdateFunc indicates an expected call of AddOnUpdateFunc.
func (mr *MockEndpointControllerMockRecorder) AddOnUpdateFunc(serviceName, updateFunc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddOnUpdateFunc", reflect.TypeOf((*MockEndpointController)(nil).AddOnUpdateFunc), serviceName, updateFunc)
}

// GetEndpoints mocks base method.
func (m *MockEndpointController) GetEndpoints(serviceName, namespace string) ([]*ServiceInstance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEndpoints", serviceName, namespace)
	ret0, _ := ret[0].([]*ServiceInstance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEndpoints indicates an expected call of GetEndpoints.
func (mr *MockEndpointControllerMockRecorder) GetEndpoints(serviceName, namespace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEndpoints", reflect.TypeOf((*MockEndpointController)(nil).GetEndpoints), serviceName, namespace)
}
